exit
total-de-vidas
(+ 10 2)
(* 7 6)
(/ 6 3)
(+ 2 (+ 1 2))
(+ 4 (+ 1 2))
(- 7 (+ 4 (+ 1 20)))
(- (+ 4 (+ 1 20)) 7)
(+ (* 5 (/ 10 2)) 1)
(defn mult2 [x] (* x 2))
(mult2 2)
(defn mult2x [x] (* x (+ 2 x)))
(mult2x 2)
(^ 2 3)
(Math/pow 2 3)
(Math/pow 3 2)
(Math/pow 3 3)
(Math/pow 2 3)
(defn pow3 [x] (* x (Math/pow 2 x)))
(pow3 3)
(print "VocÃª perdeu")
perdeu
exit
(perdeu)
exit
(perdeu)
(require '[forca.core :as forca] :reload)
(require '[jogo-forca.core :as forca] :reload)
(forca/jogo 6)
(require '[jogo-forca.core :as forca] :reload)
(forca/jogo 6)
(require '[jogo-forca.core :as forca] :reload)
(forca/jogo 6)
(not= 10 10)
exit
(fib 0)
(require '[jogo-forca.core :as forca] :reload)
(fib 0)
(fib 1)
(fib 2)
(fib 3)
(fib 4)
(fib 5)
(fib 6)
(fib 20)
exit
